{
	"id": "3d36cfba25735f41f3ddc76695b75811",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"FallBackExample.sol": {
				"content": "pragma solidity ^0.8.7;\r\n contract FunctionsExample {\r\n     \r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"FallBackExample.sol": {
				"FunctionsExample": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FallBackExample.sol\":26:64  contract FunctionsExample {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FallBackExample.sol\":26:64  contract FunctionsExample {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c9f63d7df135f4649706664981eb9c1d952f00e2421672f5dfaee4f694f2a1464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205c9f63d7df135f4649706664981eb9c1d952f00e2421672f5dfaee4f694f2a1464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C SWAP16 PUSH4 0xD7DF135F CHAINID 0x49 PUSH17 0x6664981EB9C1D952F00E2421672F5DFAEE 0x4F PUSH10 0x4F2A1464736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "26:38:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205c9f63d7df135f4649706664981eb9c1d952f00e2421672f5dfaee4f694f2a1464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C SWAP16 PUSH4 0xD7DF135F CHAINID 0x49 PUSH17 0x6664981EB9C1D952F00E2421672F5DFAEE 0x4F PUSH10 0x4F2A1464736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "26:38:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 64,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 64,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c9f63d7df135f4649706664981eb9c1d952f00e2421672f5dfaee4f694f2a1464736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 64,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 64,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 64,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 64,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 64,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 64,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FallBackExample.sol\":\"FunctionsExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"FallBackExample.sol\":{\"keccak256\":\"0x45a0e3d24c048127271e7c66a22e3a2fcc1efe8a6dadb6f0c6f7582d6b57d784\",\"urls\":[\"bzz-raw://6133f7d3f29527a6bce8f064b9591775942b6a914d5fe766f5a535ca09326727\",\"dweb:/ipfs/QmNR8BByY2Eh4myr63J6uJ2f6zXk85sZVRmyUw5dUAsdrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> FallBackExample.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "FallBackExample.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"FallBackExample.sol": {
				"ast": {
					"absolutePath": "FallBackExample.sol",
					"exportedSymbols": {
						"FunctionsExample": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "FunctionsExample",
							"nameLocation": "35:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:38:0",
							"usedErrors": []
						}
					],
					"src": "0:64:0"
				},
				"id": 0
			}
		}
	}
}