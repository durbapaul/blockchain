{
	"id": "a140fa968a5322d6ab7ddbd9cbd81870",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"exceptions.sol": {
				"content": "pragma solidity ^0.8.7;\r\n contract Excemption {\r\n     \r\n }\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"exceptions.sol": {
				"Excemption": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"exceptions.sol\":26:58  contract Excemption {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"exceptions.sol\":26:58  contract Excemption {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205a0bc24f0242ab208d69dff92631ce088181b2a36d1a64590be77214c12f9f8b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205a0bc24f0242ab208d69dff92631ce088181b2a36d1a64590be77214c12f9f8b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS SIGNEXTEND 0xC2 0x4F MUL TIMESTAMP 0xAB KECCAK256 DUP14 PUSH10 0xDFF92631CE088181B2A3 PUSH14 0x1A64590BE77214C12F9F8B64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "26:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205a0bc24f0242ab208d69dff92631ce088181b2a36d1a64590be77214c12f9f8b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS SIGNEXTEND 0xC2 0x4F MUL TIMESTAMP 0xAB KECCAK256 DUP14 PUSH10 0xDFF92631CE088181B2A3 PUSH14 0x1A64590BE77214C12F9F8B64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "26:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a0bc24f0242ab208d69dff92631ce088181b2a36d1a64590be77214c12f9f8b64736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 58,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 58,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 58,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 58,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 58,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 58,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"exceptions.sol\":\"Excemption\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"exceptions.sol\":{\"keccak256\":\"0x2359924abca13becc417059991c5a84eb36d4adb608c363c5ba40ea8c308cffb\",\"urls\":[\"bzz-raw://82e4fa3ee54191418610fbcb340dc4a7f20511fa6406f98f9c07f3c5f3306180\",\"dweb:/ipfs/QmNZDWMcLoSHc68zmSq5GkUQ6LrhSGHZnfaMiBZbWiTmBj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> exceptions.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "exceptions.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"exceptions.sol": {
				"ast": {
					"absolutePath": "exceptions.sol",
					"exportedSymbols": {
						"Excemption": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Excemption",
							"nameLocation": "35:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:32:0",
							"usedErrors": []
						}
					],
					"src": "0:62:0"
				},
				"id": 0
			}
		}
	}
}