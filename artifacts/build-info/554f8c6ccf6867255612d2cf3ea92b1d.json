{
	"id": "554f8c6ccf6867255612d2cf3ea92b1d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"variables.sol": {
				"content": "pragma solidity ^0.8.7;\r\ncontract WorkingWithVariables {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"variables.sol": {
				"WorkingWithVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"variables.sol\":25:65  contract WorkingWithVariables {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"variables.sol\":25:65  contract WorkingWithVariables {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000b8778cfc4e8973f6734dbccfd1260c64763750d23ca3a9f1a930e2fc00fa6864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122000b8778cfc4e8973f6734dbccfd1260c64763750d23ca3a9f1a930e2fc00fa6864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xB8 PUSH24 0x8CFC4E8973F6734DBCCFD1260C64763750D23CA3A9F1A930 0xE2 0xFC STOP STATICCALL PUSH9 0x64736F6C6343000807 STOP CALLER ",
							"sourceMap": "25:40:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122000b8778cfc4e8973f6734dbccfd1260c64763750d23ca3a9f1a930e2fc00fa6864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xB8 PUSH24 0x8CFC4E8973F6734DBCCFD1260C64763750D23CA3A9F1A930 0xE2 0xFC STOP STATICCALL PUSH9 0x64736F6C6343000807 STOP CALLER ",
							"sourceMap": "25:40:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 65,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 65,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000b8778cfc4e8973f6734dbccfd1260c64763750d23ca3a9f1a930e2fc00fa6864736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 65,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 65,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 65,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 65,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 65,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 65,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"variables.sol\":\"WorkingWithVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"variables.sol\":{\"keccak256\":\"0xaeba6989e9ccecf894308e2804e58d11d2cec4fecf630a85ce332d217a76d1e6\",\"urls\":[\"bzz-raw://13a24ce130de7787c7b351dc39e819073a20b19f087a1b7b953ead81ae5705f9\",\"dweb:/ipfs/QmRj361tbhE8V8jMCpGFh7J3AHxsMizmbDTqaWG5DrcYfo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> variables.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "variables.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"variables.sol": {
				"ast": {
					"absolutePath": "variables.sol",
					"exportedSymbols": {
						"WorkingWithVariables": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "WorkingWithVariables",
							"nameLocation": "34:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:40:0",
							"usedErrors": []
						}
					],
					"src": "0:65:0"
				},
				"id": 0
			}
		}
	}
}