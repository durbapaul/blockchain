{
	"id": "8da97fa7b10a78adac341c6befb95b8b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"TryCatchErrorHandling.sol": {
				"content": "pragma solidity ^0.8.7;\r\n contract TryCatch {\r\n     \r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"TryCatchErrorHandling.sol": {
				"TryCatch": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TryCatchErrorHandling.sol\":26:56  contract TryCatch {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TryCatchErrorHandling.sol\":26:56  contract TryCatch {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220281cb540284e493218e485ecd06609710adb9df2d330c45e0f6d0b52126118c164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220281cb540284e493218e485ecd06609710adb9df2d330c45e0f6d0b52126118c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SHR 0xB5 BLOCKHASH 0x28 0x4E 0x49 ORIGIN XOR 0xE4 DUP6 0xEC 0xD0 PUSH7 0x9710ADB9DF2D3 ADDRESS 0xC4 0x5E 0xF PUSH14 0xB52126118C164736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "26:30:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220281cb540284e493218e485ecd06609710adb9df2d330c45e0f6d0b52126118c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SHR 0xB5 BLOCKHASH 0x28 0x4E 0x49 ORIGIN XOR 0xE4 DUP6 0xEC 0xD0 PUSH7 0x9710ADB9DF2D3 ADDRESS 0xC4 0x5E 0xF PUSH14 0xB52126118C164736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "26:30:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220281cb540284e493218e485ecd06609710adb9df2d330c45e0f6d0b52126118c164736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 56,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 56,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 56,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TryCatchErrorHandling.sol\":\"TryCatch\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TryCatchErrorHandling.sol\":{\"keccak256\":\"0xc481574a653fe1552ce39c6f72c571022dd7c716ce91688539d57371b09a19fe\",\"urls\":[\"bzz-raw://d51287b7e5545a6abdfba530ffef1e7d42bd5cf5c6591fdc150118ffdbedf9ee\",\"dweb:/ipfs/QmUPhMBs96L6KANTb1XKdsJmT4fGnSs1Y9QcAFA65AJUQc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> TryCatchErrorHandling.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "TryCatchErrorHandling.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"TryCatchErrorHandling.sol": {
				"ast": {
					"absolutePath": "TryCatchErrorHandling.sol",
					"exportedSymbols": {
						"TryCatch": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "TryCatch",
							"nameLocation": "35:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:30:0",
							"usedErrors": []
						}
					],
					"src": "0:56:0"
				},
				"id": 0
			}
		}
	}
}