{
	"id": "25a98a4d76825e89c2e3948e660552cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"variables.sol": {
				"content": "pragma solidity ^0.8.7;\r\ncontract WorkingWithVariables {}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"variables.sol": {
				"WorkingWithVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"variables.sol\":25:57  contract WorkingWithVariables {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"variables.sol\":25:57  contract WorkingWithVariables {} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c61aa0f8e0cc9ff3da29dccb958f99148231c18b830701cae8a1cb710deccd964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212209c61aa0f8e0cc9ff3da29dccb958f99148231c18b830701cae8a1cb710deccd964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH2 0xAA0F DUP15 0xC 0xC9 SELFDESTRUCT RETURNDATASIZE LOG2 SWAP14 0xCC 0xB9 PC 0xF9 SWAP2 BASEFEE 0x23 SHR XOR 0xB8 ADDRESS PUSH17 0x1CAE8A1CB710DECCD964736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "25:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212209c61aa0f8e0cc9ff3da29dccb958f99148231c18b830701cae8a1cb710deccd964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH2 0xAA0F DUP15 0xC 0xC9 SELFDESTRUCT RETURNDATASIZE LOG2 SWAP14 0xCC 0xB9 PC 0xF9 SWAP2 BASEFEE 0x23 SHR XOR 0xB8 ADDRESS PUSH17 0x1CAE8A1CB710DECCD964736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "25:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 57,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c61aa0f8e0cc9ff3da29dccb958f99148231c18b830701cae8a1cb710deccd964736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 57,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 57,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 57,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"variables.sol\":\"WorkingWithVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"variables.sol\":{\"keccak256\":\"0xac56876a399c9469b48c92bcf6407aa7e683a713b2d58cb41edfe84152dd938f\",\"urls\":[\"bzz-raw://df0b65d21d4e6aa3c893c5d7037a6d525716d20e7bee00ce8d6b437b25516c84\",\"dweb:/ipfs/QmUcGnjHSjEbLJwMAeJ9NXwBfY2r4hJ8wbvKCe3xKGcjC1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> variables.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "variables.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"variables.sol": {
				"ast": {
					"absolutePath": "variables.sol",
					"exportedSymbols": {
						"WorkingWithVariables": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "WorkingWithVariables",
							"nameLocation": "34:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:32:0",
							"usedErrors": []
						}
					],
					"src": "0:57:0"
				},
				"id": 0
			}
		}
	}
}