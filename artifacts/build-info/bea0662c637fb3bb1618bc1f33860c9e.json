{
	"id": "bea0662c637fb3bb1618bc1f33860c9e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"exceptions.sol": {
				"content": "pragma solidity ^0.8.7;\r\n contract Excemption {\r\n      \r\n }\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"exceptions.sol": {
				"Excemption": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"exceptions.sol\":26:59  contract Excemption {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"exceptions.sol\":26:59  contract Excemption {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201563422737d5475089c4a0fa098203dca1428346789241857d45b5e08f3cf09864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201563422737d5475089c4a0fa098203dca1428346789241857d45b5e08f3cf09864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH4 0x422737D5 SELFBALANCE POP DUP10 0xC4 LOG0 STATICCALL MULMOD DUP3 SUB 0xDC LOG1 TIMESTAMP DUP4 CHAINID PUSH25 0x9241857D45B5E08F3CF09864736F6C63430008070033000000 ",
							"sourceMap": "26:33:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201563422737d5475089c4a0fa098203dca1428346789241857d45b5e08f3cf09864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH4 0x422737D5 SELFBALANCE POP DUP10 0xC4 LOG0 STATICCALL MULMOD DUP3 SUB 0xDC LOG1 TIMESTAMP DUP4 CHAINID PUSH25 0x9241857D45B5E08F3CF09864736F6C63430008070033000000 ",
							"sourceMap": "26:33:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 59,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201563422737d5475089c4a0fa098203dca1428346789241857d45b5e08f3cf09864736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 59,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 59,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 59,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"exceptions.sol\":\"Excemption\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"exceptions.sol\":{\"keccak256\":\"0x9dd7b8d29a8c2ee09cc245a945e13031e19c9ac1e4d4f3c668174d75e6dafba2\",\"urls\":[\"bzz-raw://e414c59a3a62abcf13978746e2ea2f1feb15fb7752cf6d1ca7e55c0700e9374d\",\"dweb:/ipfs/QmXqjy5iboKUoxDJh2NyPLPBTJMUxJ4ZXyyP7BWUyPZkKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> exceptions.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "exceptions.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"exceptions.sol": {
				"ast": {
					"absolutePath": "exceptions.sol",
					"exportedSymbols": {
						"Excemption": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Excemption",
							"nameLocation": "35:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:33:0",
							"usedErrors": []
						}
					],
					"src": "0:63:0"
				},
				"id": 0
			}
		}
	}
}