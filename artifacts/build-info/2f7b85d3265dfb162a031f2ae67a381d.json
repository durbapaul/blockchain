{
	"id": "2f7b85d3265dfb162a031f2ae67a381d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"EventExample.sol": {
				"content": "pragma solidity ^0.8.7;\r\n\r\ncontract EventExample {\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"EventExample.sol": {
				"EventExample": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"EventExample.sol\":27:61  contract EventExample {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"EventExample.sol\":27:61  contract EventExample {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c405feaa607ec9326fedf0230c65e3520b2a38db0cc47b2e4516221b247306e564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c405feaa607ec9326fedf0230c65e3520b2a38db0cc47b2e4516221b247306e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SDIV INVALID 0xAA PUSH1 0x7E 0xC9 ORIGIN PUSH16 0xEDF0230C65E3520B2A38DB0CC47B2E45 AND 0x22 SHL 0x24 PUSH20 0x6E564736F6C6343000807003300000000000000 ",
							"sourceMap": "27:34:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c405feaa607ec9326fedf0230c65e3520b2a38db0cc47b2e4516221b247306e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SDIV INVALID 0xAA PUSH1 0x7E 0xC9 ORIGIN PUSH16 0xEDF0230C65E3520B2A38DB0CC47B2E45 AND 0x22 SHL 0x24 PUSH20 0x6E564736F6C6343000807003300000000000000 ",
							"sourceMap": "27:34:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 61,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c405feaa607ec9326fedf0230c65e3520b2a38db0cc47b2e4516221b247306e564736f6c63430008070033",
									".code": [
										{
											"begin": 27,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 61,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 61,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 61,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"EventExample.sol\":\"EventExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EventExample.sol\":{\"keccak256\":\"0x67bc9d3a7b0c561dde2913a518d731e332566659c43d89af25cce9d658135ddb\",\"urls\":[\"bzz-raw://f60c15a1b15e1e3d6e618ff47bf7eaebc9670a119179db20cff8d6d539d1cc3b\",\"dweb:/ipfs/QmaEKJzFy7rH7RzKPAdUqpKfiFUkZy6w6hP6KzBTTFfW2X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> EventExample.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "EventExample.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"EventExample.sol": {
				"ast": {
					"absolutePath": "EventExample.sol",
					"exportedSymbols": {
						"EventExample": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "EventExample",
							"nameLocation": "36:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:34:0",
							"usedErrors": []
						}
					],
					"src": "0:61:0"
				},
				"id": 0
			}
		}
	}
}