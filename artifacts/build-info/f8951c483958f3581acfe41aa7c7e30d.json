{
	"id": "f8951c483958f3581acfe41aa7c7e30d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"TryCatchErrorHandling.sol": {
				"content": "pragma solidity ^0.8.7;\r\n contract WillThrow {\r\n     \r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"TryCatchErrorHandling.sol": {
				"WillThrow": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TryCatchErrorHandling.sol\":26:57  contract WillThrow {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TryCatchErrorHandling.sol\":26:57  contract WillThrow {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a89707864d35326856c75ef7f628be2132314757f14315c89c7323b5cc5ef7764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203a89707864d35326856c75ef7f628be2132314757f14315c89c7323b5cc5ef7764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE DUP10 PUSH17 0x7864D35326856C75EF7F628BE213231475 PUSH32 0x14315C89C7323B5CC5EF7764736F6C6343000807003300000000000000000000 ",
							"sourceMap": "26:31:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203a89707864d35326856c75ef7f628be2132314757f14315c89c7323b5cc5ef7764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE DUP10 PUSH17 0x7864D35326856C75EF7F628BE213231475 PUSH32 0x14315C89C7323B5CC5EF7764736F6C6343000807003300000000000000000000 ",
							"sourceMap": "26:31:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 57,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a89707864d35326856c75ef7f628be2132314757f14315c89c7323b5cc5ef7764736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 57,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 57,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 57,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TryCatchErrorHandling.sol\":\"WillThrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TryCatchErrorHandling.sol\":{\"keccak256\":\"0x54a0798ef777a05f762839d5b2432157807b02e638e9314333b4f3dbcabbdbe0\",\"urls\":[\"bzz-raw://8382d65e06716a3a602790d850a06ee56cbd06945eaba648a4da4aa5fce2e9f5\",\"dweb:/ipfs/QmWTaFvgJPkwhdr4KBL2gRKb8aZdttAuJN1kkkwSz7Weq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> TryCatchErrorHandling.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "TryCatchErrorHandling.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"TryCatchErrorHandling.sol": {
				"ast": {
					"absolutePath": "TryCatchErrorHandling.sol",
					"exportedSymbols": {
						"WillThrow": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "WillThrow",
							"nameLocation": "35:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:31:0",
							"usedErrors": []
						}
					],
					"src": "0:57:0"
				},
				"id": 0
			}
		}
	}
}